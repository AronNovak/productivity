<?php
/**
 * @file
 * Code for the Productivity time tracking feature.
 */

include_once 'productivity_time_tracking.features.inc';


/**
 * Implements hook_node_presave().
 *
 * Set the node title automatically.
 */
function productivity_time_tracking_node_presave($node) {
  if ($node->type == 'time_tracking') {
    $wrapper = entity_metadata_wrapper('node', $node);
    $title =
      date('d M Y', $wrapper->field_work_date->value()) . ' - ' .
      ($wrapper->__isset('field_employee') ? ($wrapper->field_employee->label() . '-') : '') .
      ($wrapper->__isset('field_project') ? ($wrapper->field_project->label() . '-') : '') .
      $wrapper->field_day_type->value();
    $wrapper->title->set($title);
  }
}

/**
 * Implements hook_menu().
 */
function productivity_time_tracking_menu() {
  $items = array();
  // Create a time tracking node(s) from mailGun JSON.
  $items['mailgun/get-tracking'] = array(
    'title' => 'Create time tracking',
    'access arguments' => array('access content'),
    'page callback' => 'productivity_time_tracking_mail_create',
    'access callback' => 'user_is_anonymous',
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Upload file.
 */
function productivity_time_tracking_mail_create() {
  watchdog('productivity_time_tracking', '$_POST: <pre>'. print_r($_POST, TRUE) .'</pre>');
  watchdog('productivity_time_tracking', '$_FILES: <pre>'. print_r($_FILES, TRUE) .'</pre>');
  watchdog('productivity_time_tracking', '$_POST[From]: <pre>'. check_plain($_POST['From']) .'</pre>');
  watchdog('productivity_time_tracking', '$_POST[To]: <pre>'. check_plain($_POST['To']) .'</pre>');
  watchdog('productivity_time_tracking', '$_POST[Subject]: <pre>'. check_plain($_POST['Subject']) .'</pre>');
  if (empty($_POST['X-Mailgun-Incoming']) || $_POST['X-Mailgun-Incoming'] != 'Yes') {
    watchdog('productivity_time_tracking', 'Return #46, $_POST[X-Mailgun-Incoming]: <pre>'. $_POST['X-Mailgun-Incoming'] .'</pre>');
    return;
  }
  if (empty($_FILES)) {
    watchdog('productivity_time_tracking', 'Return #52, empty $_FILES');
    // No files uploaded.
    return;
  }
  if (!$account = user_load_by_mail($_POST['From'])) {
    // Get the account from the email in the form "John doe <john@example.com>".
    $pattern = '/<(.*)>/i';
    $matches = array();
    preg_match($pattern, $_POST['From'], $matches);
    if (!$matches) {
      watchdog('productivity_time_tracking', 'Return #63, no matches');
      // Can't process the email address.
      return;
    }
    if (!$account = user_load_by_mail($matches[1])) {
      watchdog('productivity_time_tracking', 'Return #68, User not loaded');
      return;
    }
  }
  // Find project the document should be created, by the "To" value, which is in
  // the form of "pipelines+1234@example.com)
  $uuid = str_replace('pipelines+', '', $_POST['To']);
  $uuid = str_replace('@' . variable_get('productivity_time_tracking_mail_upload_address', 'gizra-labs.com'), '', $uuid);
  // The uuid might be wrapped with '<>'.
  $uuid = trim($uuid, '<>');

  // TODO: Save tracking entity.
}
